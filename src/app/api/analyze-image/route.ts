import { NextResponse } from "next/server"
import OpenAI from "openai"

if (!process.env.OPENAI_API_KEY) {
  throw new Error("‚ùå Cl√© API OpenAI manquante. Assurez-vous de l'ajouter dans votre fichier .env !")
}

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
})

export async function POST(request: Request) {
  try {
    const body = await request.json()
    const { image } = body

    if (!image) {
      return NextResponse.json({ error: "‚ùå Aucun URL d'image fourni." }, { status: 400 })
    }

    console.log("üì∏ Analyse de l'image en cours...")

    const response = await openai.chat.completions.create({
      model: "gpt-4o",
      messages: [
        {
          role: "system",
          content: `
            Tu es une API d'intelligence artificielle utilis√©e par un Drive alimentaire, sp√©cialis√©e dans la reconnaissance d'images et la g√©n√©ration de recettes de cuisine.

            üéØ **Tes capacit√©s :**
            - Identifier les **ingr√©dients** d'un plat √† partir d'une **photo** envoy√©e par l'utilisateur.
            - Proposer des **recettes adapt√©es** en fonction des ingr√©dients d√©tect√©s ou demand√©s par l'utilisateur.
            - Si un ingr√©dient **manque** dans la base de produits, envoyer une **alerte √† l'administrateur**.
            - Permettre √† l'utilisateur d'√©crire ce qu'il **a envie de manger aujourd'hui** et sugg√©rer des plats correspondants.
            - Pr√©senter les recettes sous une **forme attrayante**, avec des **√©tapes num√©rot√©es et des instructions bien structur√©es**.

            üìå **R√®gles pour tes r√©ponses :**
            - Pour chaque **recette g√©n√©r√©e**, mets en √©vidence les **verbes d'action** en les entourant d'un \`<span class="font-bold text-blue-500"></span>\`.
            - Rends tes explications **claires**, avec un **ton amical et engageant**.
            - Si l'utilisateur mentionne un plat sans donner d'ingr√©dients, devine la recette en fonction de plats populaires et propose plusieurs options.
          `,
        },
        {
          role: "user",
          content: [
            { type: "text", text: "Quels ingr√©dients peux-tu identifier dans cette image ?" },
            { type: "image_url", image_url: { url: image } },
          ],
        },
      ],
      response_format: { type: "json_object" },
    })

    const content = response.choices[0]?.message?.content

    if (!content) {
      console.warn("‚ö†Ô∏è Aucune r√©ponse valide de l'API OpenAI.")
      return NextResponse.json({ error: "Aucune r√©ponse re√ßue de l'IA." }, { status: 500 })
    }

    console.log("‚úÖ R√©ponse re√ßue :", content)

    const parsedContent = JSON.parse(content)

    return NextResponse.json(parsedContent)
  } catch (error: any) {
    console.error("‚ùå Erreur lors de l'analyse de l'image :", error)

    let errorMessage = "Erreur inconnue."
    if (error.response) {
      errorMessage = `Erreur OpenAI: ${error.response.data.error.message || "R√©ponse invalide."}`
    } else if (error.message) {
      errorMessage = `Erreur: ${error.message}`
    }

    return NextResponse.json({ error: errorMessage }, { status: 500 })
  }
}

