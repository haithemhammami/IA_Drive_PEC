import { NextResponse } from "next/server";
import OpenAI from "openai";

export async function POST(request: Request) {
  try {
    if (!process.env.OPENAI_API_KEY) {
      throw new Error("‚ùå Cl√© API OpenAI manquante. Assurez-vous de l'ajouter dans votre fichier .env !");
    }

    const openai = new OpenAI({
      apiKey: process.env.OPENAI_API_KEY,
    });

    const body = await request.json();
    const { image } = body;

    if (!image) {
      return NextResponse.json({ error: "‚ùå Aucun URL d'image fourni." }, { status: 400 });
    }

    console.log("üì∏ Analyse de l'image en cours...");

    const response = await openai.chat.completions.create({
      model: "gpt-4o",
      messages: [
        {
          role: "system",
          content: `
            Vous √™tes un assistant IA sp√©cialis√© dans l'analyse d'images de nourriture et la cr√©ation de listes de courses.
            Votre t√¢che est d'analyser l'image fournie et de g√©n√©rer une r√©ponse JSON valide contenant les informations suivantes :
            - Le plat principal identifi√©
            - Une liste des ingr√©dients visibles
            - Une liste d'ingr√©dients suppl√©mentaires sugg√©r√©s
            - Une recette simple bas√©e sur les ingr√©dients identifi√©s

            IMPORTANT: Votre r√©ponse DOIT √™tre un JSON valide, sans aucun texte suppl√©mentaire avant ou apr√®s.
            N'incluez PAS de backticks (\`\`\`) ni d'autres marqueurs dans votre r√©ponse.

            Utilisez strictement le format suivant :
            {
              "dish": "Nom du plat principal",
              "visibleIngredients": ["ingr√©dient1", "ingr√©dient2", ...],
              "suggestedIngredients": ["ingr√©dient3", "ingr√©dient4", ...],
              "recipe": {
                "name": "Nom de la recette",
                "ingredients": ["quantit√© ingr√©dient1", "quantit√© ingr√©dient2", ...],
                "instructions": ["√©tape 1", "√©tape 2", ...]
              }
            }
          `,
        },
        {
          role: "user",
          content: [
            {
              type: "text",
              text: "Analysez cette image de nourriture et fournissez les d√©tails demand√©s en JSON valide.",
            },
            { type: "image_url", image_url: { url: image } },
          ],
        },
      ],
      response_format: { type: "json_object" },
    });

    const content = response.choices[0]?.message?.content;

    if (!content) {
      console.warn("‚ö†Ô∏è Aucune r√©ponse valide de l'API OpenAI.");
      return NextResponse.json({ error: "Aucune r√©ponse re√ßue de l'IA." }, { status: 500 });
    }

    console.log("‚úÖ R√©ponse re√ßue :", content);

    let analysisResult;

    try {
      analysisResult = JSON.parse(content);
    } catch (parseError) {
      console.error("‚ùå Erreur lors de l'analyse de la r√©ponse JSON :", parseError);
      return NextResponse.json({ error: "Erreur lors de l'analyse de la r√©ponse de l'IA" }, { status: 500 });
    }

    return NextResponse.json(analysisResult);
  } catch (error: unknown) {
    console.error("‚ùå Erreur lors de l'analyse de l'image :", error);
    return NextResponse.json({ error: "Erreur lors de l'analyse de l'image" }, { status: 500 });
  }
}
