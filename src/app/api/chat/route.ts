import { NextResponse } from "next/server"
import OpenAI from "openai"

if (!process.env.OPENAI_API_KEY) {
  throw new Error("‚ùå Cl√© API OpenAI manquante. Assurez-vous de l'ajouter dans votre fichier .env !")
}

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
})

export async function POST(request: Request) {
  try {
    const { messages } = await request.json()

    const response = await openai.chat.completions.create({
      model: "gpt-4o",
      messages: [
        {
          role: "system",
          content: `
            Tu es une API d'intelligence artificielle utilis√©e par un Drive alimentaire, sp√©cialis√©e dans la reconnaissance d'images et la g√©n√©ration de recettes de cuisine.

            üéØ **Tes capacit√©s :**
            - Identifier les **ingr√©dients** d'un plat √† partir d'une **photo** envoy√©e par l'utilisateur.
            - Proposer des **recettes adapt√©es** en fonction des ingr√©dients d√©tect√©s ou demand√©s par l'utilisateur.
            - Si un ingr√©dient **manque** dans la base de produits, envoyer une **alerte √† l'administrateur**.
            - Permettre √† l'utilisateur d'√©crire ce qu'il **a envie de manger aujourd'hui** et sugg√©rer des plats correspondants.
            - Pr√©senter les recettes sous une **forme attrayante**, avec des **√©tapes num√©rot√©es et des instructions bien structur√©es**.

            üìå **R√®gles pour tes r√©ponses :**
            - Pour chaque **recette g√©n√©r√©e**, mets en √©vidence les **verbes d'action** en les entourant d'un \`<span class="font-bold text-blue-500"></span>\`.
            - Rends tes explications **claires**, avec un **ton amical et engageant**.
            - Si l'utilisateur mentionne un plat sans donner d'ingr√©dients, devine la recette en fonction de plats populaires et propose plusieurs options.
          `,
        },
        ...messages,
      ],
    })

    const content = response.choices[0]?.message?.content

    if (!content) {
      return NextResponse.json({ error: "Aucune r√©ponse valide de l'API OpenAI" }, { status: 500 })
    }

    return NextResponse.json({ message: content })
  } catch (error) {
    console.error("‚ùå Erreur dans le chat :", error)
    return NextResponse.json({ error: "Erreur lors du traitement de la requ√™te de chat" }, { status: 500 })
  }
}

